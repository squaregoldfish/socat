! Define and write the inner sequence variables
! Set output data type as in the erddap files
! Reset the bad-value flag to avoid floating-point conversion errors

def sym vname = `varnames[d=1,j=($jj)]`


def sym vtype = `($vname)_1,return=dtype`
def sym badval = ($vtype"0|CHAR>0|FLOAT>-99999|INT4>2147483647|DOUBLE>-99999|*>0")

let sorttime = sorti(time_1[i=`n1`:`n2`])

let ($vname)_0 = xsequence(($vname)_1[i=`n1`:`n2`])
let ($vname)_2 = samplei(($vname)_1, sorttime)
let ($vname)_3 = samplei(($vname)_1, sorttime)
IF ($vtype"0|CHAR>0|*>1) THEN let ($vname)_3 = MISSING(($vname)_2, ($badval))

let/bad=($badval) ($vname) = ($vname)_3[gx=obs1@asn]
IF ($vtype"0|CHAR>0|*>1) THEN def att/output ($vname)._FillValue = ($badval)
set att/like=($vname)_1/output=all ($vname)


set var/outtype=float fCO2_recomputed
set var/outtype=float pressure
set var/outtype=float pressure_ncep_slp
set var/outtype=float pressure_equilibrium
set var/outtype=float salinity
set var/outtype=float salinity_woa5
set var/outtype=float temperature
set var/outtype=float temperature_equilibrium
set var/outtype=float longitude
set var/outtype=float latitude
set var/outtype=float depth
set var/outtype=float ETOPO2_depth
set var/outtype=double time
set var/outtype=float day_of_year
set var/outtype=int WOCE_flag
set var/outtype=int fCO2_source
set var/outtype=int data_id

save/quiet/append/file="($outfile)" ($vname)

